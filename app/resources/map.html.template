{# Copyright 2010 Google Inc.  Licensed under the Apache License, Version   #}
{# 2.0 (the "License"); you may not use this file except in compliance with #}
{# the License.  You may obtain a copy of the License at:                   #}
{#     http://www.apache.org/licenses/LICENSE-2.0                           #}
{# Unless required by applicable law or agreed to in writing, software      #}
{# distributed under the License is distributed on an "AS IS" BASIS,        #}
{# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. #}
{# See the License for the specific language governing permissions and      #}
{# limitations under the License.                                           #}

{# Template fragment for the embedded map (used in create.py and view.py).  #}

{% if env.maps_api_key %}
<script src="http://maps.googleapis.com/maps/api/js?sensor=true&language={{env.lang}}"></script>
<!--<script src="http://maps.googleapis.com/maps/api/js?key={{env.maps_api_key}}&sensor=true&language={{env.lang}}"></script>-->
<script>
function addMarker(map, latLng,
                   draggable,
                   no_start_location) {
  var geocoder = new google.maps.Geocoder();
  var marker_location = latLng;
  if (no_start_location) {
    // If no good place for the marker, putting it in the left top corner.
    marker_location = new google.maps.LatLng(map.fromContainerPixelToLatLng(
          new GPoint(80, 50)));
  }
  var marker = new google.maps.Marker({
      position: marker_location,
      draggable: draggable
  });

  if (draggable) {
    var map_move_listener = null;

    if (no_start_location) {
      map_move_listener = google.maps.event.addListener(map, "move", function () {
        var marker_point_lat_long =
            map.fromContainerPixelToLatLng(new GPoint(80, 50));
        marker.setLatLng(marker_point_lat_long);
      });
    }

    google.maps.event.addListener(marker, "dragend", function() {
        var new_lat_long = marker.getLatLng();
        if (map_move_listener) {
          google.maps.event.removeListener(map_move_listener);
        }
        document.getElementById("last_known_location").value
            = new_lat_long.lat() + ',' + new_lat_long.lng();
        geocoder.getLocations(new_lat_long, onReverseGeocode);
    });
  }

  var zoomLevel = 10;
  if (no_start_location) {
    zoomLevel = {{config.map_default_zoom}};
  }
  map.setCenter(latLng, zoomLevel);
}

function onReverseGeocode(response) {
  if (!response || response.Status.code != 200 || !response.Placemark || response.Placemark.length <= 0) {
    // Too bad, but nothing to do here, falling back to lat long.
    return;
  }
  var place = response.Placemark[0];
  if (place.AddressDetails.Accuracy < 6) {
    // Too low accuracy, better leave lat long.
    return;
  }
  document.getElementById("last_known_location").value = place.address;
}

function isLatLng(lat_lng_str) {
  var lat_lng_split = lat_lng_str.split(',');
  if (lat_lng_split.length == 2) {
    var lat = parseFloat(lat_lng_split[0])
    var lng = parseFloat(lat_lng_split[1])
    return !isNaN(lat) && !isNaN(lng);
  }
  return false;
}

// public
function MaybeToggleMapLink(map_id, lat_long_str) {
  var geocoder = new GClientGeocoder();
  if (IsLatLong(lat_long_str)) {
    ToggleMapLink(map_id);
  } else {
    geocoder.getLatLng(lat_long_str, function(point) {
        if (point) {
          document.getElementById(map_id + '_real_lat_long').value = point.lat() + ',' + point.lng();
          ToggleMapLink(map_id);
        }
    });
  }
}

function initMap(map_id, lat_long_str) {
  var map = new GMap2(document.getElementById(map_id));
  var startLatLng = new GLatLng(
      {{config.map_default_center.0}}, {{config.map_default_center.1}});
  if (lat_long_str != '') {
    var lat_long_split = new Array();
    lat_long_split = lat_long_str.split(',');
    if (lat_long_split.length == 2) {
      startLatLng = new GLatLng(parseFloat(lat_long_split[0]),
                                parseFloat(lat_long_split[1]));
    }
  }
  addMarker(map, startLatLng, map_id == 'map_canvas', !lat_long_str);
}

function showMap(map_id, location_id, draggable) {
  var map_canvas = document.getElementById(map_id);
  if (!map_canvas) return;

  obj.style.width = '{{config.map_size_pixels.0}}px';
  obj.style.height = '{{config.map_size_pixels.1}}px';
  obj.style.display = 'block';

  var map = initMap(map_canvas);
}

function hideMap(map_canvas_id) {
  var map_canvas = document.getElementById(map_id);
  if (!map_canvas) return;

  map_canvas.style.display = 'none';
  toggleMapLink(map_canvas_id, false);
}

function toggleMapLink(map_id, visible) {
  var visible = !map_obj || !map_obj.style.display || map_obj.style.display == 'none';
  $(map_id + '_show_link').style.display = visible ? 'none' : '';
  $(map_id + '_hide_link').style.display = visible ? '' : 'none';
}

</script>
{% endif %}
